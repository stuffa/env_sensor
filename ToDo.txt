
add BLE security

restrict how long BLE runs - conserver batter - 5min after startup
but waht about BLE BTHome bcasts - maybe we make then a seperate service

Add Alarm (ie send when temp above/below) possibly changing sample rate as well

Add datalogging for when the network is unavaialbe - sent data latter when it is (may require a RTC for time stamps)

Deepsleep - data may be able to be retained by saving the RTC memory (machine.RTC.memory())
~~~
import machine
import ujson
rtc = machine.RTC()
d = {1:'one', 2:'two'}  # Example data to save
rtc.memory(ujson.dumps(d))  # Save in RTC RAM

r = ujson.loads(rtc.memory())  # Restore from RTC RAM
# r == {2: 'two', 1: 'one'}
~~~

Readtimout is 30 secons, so flushing the buffer will take 30+ seconds
make the readline() tmeout 1 second, do it 30 times

Add start and stop sensors

std wtd timout is 8secs - so we need to either make sure that we can update the timer, or create a second timer

Add voltage divider so we can report battery voltage